# Example: ansible-playbook gce-web.yml
# Usage: Playbook to create simple instances of gce centos/apache with load balancing
---
- name: Playbook to create gce instance (web server)
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    service_account_email: [service_account_email]
    credentials_file: [file.json]
    project_id: [project name]
    machine_type: n1-standard-1
    image: centos-7
    instance_names: [YOUR VM1,VM2,VM3]

  tasks:
    - name: Create fw rule to allow http traffic
      gce_net:
        name: default
        fwname: "[YOUR FW RULE NAME]"
        allowed: tcp:80
        state: present
        src_range: "0.0.0.0/0"
        target_tags: "http-server"
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"


    - name: Create an instance based on image {{ image }}
      gce:
        zone: us-east1-b
        instance_names: "{{ instance_names }}"
        machine_type: "{{ machine_type }}"
        image: "{{ image }}"
        state: present
        preemptible: true
        tags: http-server,https-server
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        metadata: [SSH KEY]
      register: gce

    - name: Save host data within a Group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: gce_instances_temp
      with_items: "{{ gce.instance_data }}"

    - name: Wait for ssh to come up
      wait_for: host={{ item.public_ip }} port=22 delay=10 timeout=60
      with_items: "{{ gce.instance_data }}"

    - name: Setting ip as instance fact
      set_fact: host={{ item.public_ip }}
      with_items: "{{ gce.instance_data }}"

#Second play
- name: COnfigure instance post-creation
  hosts: gce_instances_temp
  gather_facts: true
  remote_user: [YOUR USER]
  become: yes
  become_method: sudo

  roles:
    - website
